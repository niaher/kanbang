@{
	StrongViewBag.LayoutDetails = new LayoutDetails
	{
		Title = "Home",
		CurrentTopMenu = LayoutDetails.TopMenu.Home,
		Breadcrumbs = new List<Link>
		{
			new Link("Home", this.Url.Action(MVC.Home.Index()))
		}
	};
}


<h2>Home</h2>
<p>Welcome to UNOPS App!</p>

<p>
	This project template includes:

	<ul>
		<li>ASP MVC 5</li>
		<li>Web Api</li>
		<li class="list-separator"></li>
		<li>Unity IOC</li>
		<li>T4MVC</li>
		<li>Custom error pages: 404, 401</li>
		<li><a href="@this.Url.Content("~/swagger")" target="_blank">WebApi docs generated by Swashbucle/Swagger</a></li>
		<li class="list-separator"></li>
		<li>AngularJS 1.3</li>
		<li>Bootstrap 3.2 with Less</li>
		<li>Font Awesome</li>
	</ul>
</p>

<h3>Browser support</h3>
IE9 and higher.

<hr />

<h3>Styling and branding your app</h3>
<p>
	This template uses <a href="http://lesscss.org/">Less CSS</a>, which makes styling a whole lot easier. To work
	with Less CSS in Visual Studio, you will need to install <a href="http://vswebessentials.com/download">Web Essentials plugin</a>.
</p>

<p>
	To make sure our applications look uniform, this template uses <a href="http://getbootstrap.com">Bootstrap</a>,
	which means there are styles for a large number of commonly needed elements (e.g. - links, menus, alerts, panels, etc).
	Before creating a new CSS rule, you should always consult <a href="http://getbootstrap.com">Bootstrap's website</a>
	to see if there is already a rule for what you need.
</p>

<p>
	However to make sure that each app has its own identity, this template allows 2 easy configuration points:
</p>

<ul>
	<li>
		You can adjust header's background color by setting the variable <code>@@navbar-inverse-bg</code> located inside
		<em>~@Links.Styles.Bootstrap.less.variables_less</em>.
	</li>
	<li>
		You can create a custom favicon from existing image template located at <em>~@Links.Styles.Images.favicon_pxd</em>.
		This is a Pixlr file, which you can edit with <a href="http://apps.pixlr.com/editor/">Pixlr's online editor</a>.
	</li>
</ul>