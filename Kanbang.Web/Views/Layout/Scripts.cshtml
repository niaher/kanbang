@using Coderful.Core.Enums
@using Newtonsoft.Json

@functions
{
	/// <summary>
	/// Serializes enum into a JSON string. The resulting JSON string represents
	/// an object with 2 properties, one returning enum as array and another
	/// returning enum as dictionary.
	/// </summary>
	/// <typeparam name="T">Type of enum to convert.</typeparam>
	/// <returns>JSON string.</returns>
	public static string Enum<T>() where T : struct, IConvertible
	{
		return JsonConvert.SerializeObject(new
		{
			dic = EnumUtility.GetEnumValues<T, int>().ToDictionary(t => t.Name),
			list = EnumUtility.GetEnumValues<T, int>()
		});
	}
}

<script>
	var app = window.app || {};
	app.user = @AppUser.Id;
	app.root = "/@this.Request.Url.Authority@this.Url.Content("~/")";
	app.data = {
		// Example of how to serialize enums into JS global variables.
		weekend: @this.Html.Raw(Enum<DayOfWeek>())
	};
</script>
@Scripts.Render("~/js/libs/angular")
@Scripts.Render("~/js/app")